#include<bits/stdc++.h>
using namespace std;
int main(){}
class Solution {
public:
    long long maximumTripletValue(vector<int>& nums) {
        int leftMax[100];
        int rightMax[100];

        // TC = O(n)  // SC = O(n)
        int n = nums.size();
        for(int i=1; i<n; i++) {
            leftMax[i] = max(leftMax[i-1], nums[i-1]);
            rightMax[n-i-1] = max(rightMax[n-i], nums[n-i]);
        }

        long long ans = 0;
        for(int j=1; j<n-1; j++){
            ans = max(ans, (long long)(leftMax[j] - nums[j]) * rightMax[j]);
        }

        return ans;


        // TC = O(n^3)
        // int n = nums.size();
        // long long ans = 0;
        // for(int i=0; i<n; i++) {
        //     for(int j=i+1; j<n; j++) {
        //         for(int k=j+1; k<n; k++) {
        //             ans = max(ans, (long long)(nums[i] - nums[j]) * nums[k]);
        //         }
        //     }
        // }
        // return ans;


        // TC = O(n^2)
        // int n = nums.size();
        // long long ans = 0;
        // for(int k=2; k<n; k++) {
        //     int maxPrefix = nums[0];
        //     for(int j=1; j<k; j++){
        //         ans = max(ans, (long long)(maxPrefix - nums[j]) * nums[k]);
        //         maxPrefix = max(maxPrefix, nums[j]);
        //     }
        // }
        // return ans;
    }
};